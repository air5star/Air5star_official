timeout: 1800s
options:
  logging: CLOUD_LOGGING_ONLY


substitutions:
  _REGION: asia-south1
  _SERVICE: air5star-ecommerce
  _REPO: air5star

steps:
  - name: gcr.io/cloud-builders/docker
    id: Build image
    args:
      - build
      - -t
      - asia-south1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$BUILD_ID
      - .

  - name: gcr.io/cloud-builders/docker
    id: Push image
    args:
      - push
      - asia-south1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$BUILD_ID

  - name: gcr.io/cloud-builders/gcloud
    id: Deploy to Cloud Run
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run deploy ${_SERVICE} \
          --image asia-south1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$BUILD_ID \
          --region ${_REGION} \
          --allow-unauthenticated \
          --min-instances 1 \
          --port 3000 \
          --cpu 1 \
          --memory 1Gi \
          --add-cloudsql-instances air5star-ecommerce:asia-south1:air5star-postgres \
          --env-vars-file .cloudrun.env

  - name: gcr.io/cloud-builders/gcloud
    id: Create Prisma DB Push Job
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run jobs delete air5star-prisma-push --region ${_REGION} --quiet || true
        gcloud run jobs create air5star-prisma-push \
          --image asia-south1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$BUILD_ID \
          --region ${_REGION} \
          --set-cloudsql-instances air5star-ecommerce:asia-south1:air5star-postgres \
          --env-vars-file .cloudrun.env \
          --set-env-vars NODE_ENV=production \
          --command npx \
          --args prisma,db,push

  - name: gcr.io/cloud-builders/gcloud
    id: Execute Prisma DB Push Job
    args:
      - run
      - jobs
      - execute
      - air5star-prisma-push
      - --region
      - ${_REGION}
      - --wait

images:
  - asia-south1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$BUILD_ID